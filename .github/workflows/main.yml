name: Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  

jobs:

  sonarqube:
      name: SonarQube
      runs-on: ubuntu-latest
          
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-front:
    needs: [sonarqube]
    name: Build frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          cd frontend
          docker buildx build -t betting-app-front:latest .
          
      - name: Trivy Security Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'betting-app-front:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  build-back:
    needs: [sonarqube]
    name: Build backend
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Build Docker Image
        run: |
          cd backend
          docker buildx build -t betting-app-back:latest .

      - name: Trivy Security Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'betting-app-back:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # - name: Login to Registry
      #   run: echo "${{ env.TOKEN }}" | docker login "${{ env.REGISTRY_URL }}" -u "${{ env.REGISTRY_USER }}" --password-stdin

      # - name: Push to Registry
      #   run: docker push "${{ env.REGISTRY_URL }}"/dam-api:latest*
